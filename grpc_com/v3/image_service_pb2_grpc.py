# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from v3 import image_service_pb2 as v3_dot_image__service__pb2


class ImageDetectorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DetectImage = channel.unary_unary(
                '/image_service.ImageDetector/DetectImage',
                request_serializer=v3_dot_image__service__pb2.Detect.SerializeToString,
                response_deserializer=v3_dot_image__service__pb2.Response.FromString,
                )


class ImageDetectorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DetectImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImageDetectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DetectImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectImage,
                    request_deserializer=v3_dot_image__service__pb2.Detect.FromString,
                    response_serializer=v3_dot_image__service__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'image_service.ImageDetector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ImageDetector(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DetectImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/image_service.ImageDetector/DetectImage',
            v3_dot_image__service__pb2.Detect.SerializeToString,
            v3_dot_image__service__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
